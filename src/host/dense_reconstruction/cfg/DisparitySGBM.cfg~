#! /usr/bin/env python

# Declare parameters that control stereo processing

PACKAGE='dense_reconstruction'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

# disparity semi global block matching pre-filtering parameters
#gen.add("prefilter_size", int_t, 0, "Normalization window size, pixels", 9, 5, 255)
gen.add("prefilter_cap",  int_t, 0, "Bound on normalized pixel values", 63, 1, 63)

# disparity semi global block matching correlation parameters
#gen.add("correlation_window_size", int_t, 0, "SAD correlation window width, pixels", 15, 5, 255)
gen.add("min_disparity",           int_t, 0, "Disparity to begin search at, pixels (may be negative)", 512, -512, 1024)
gen.add("disparity_range",         int_t, 0, "Number of disparities to search, pixels", 192, -512, 512) 
# TODO What about trySmallerWindows?

# disparity block matching post-filtering parameters
# NOTE: Making uniqueness_ratio int_t instead of double_t to work around dynamic_reconfigure gui issue
gen.add("uniqueness_ratio",  double_t, 0, "Filter out if best match does not sufficiently exceed the next-best match", 0, 0, 100)
gen.add("SADWindowSize", int_t,    0, "Matched block size. It must be an odd number >=1", 7, 3, 11)
gen.add("P1", int_t,    0, "Penalty on the disparity change", 64, 0, 512)
gen.add("P2", int_t,    0, "Disparity smoothness", 128, 0, 512)
#gen.add("texture_threshold", int_t,    0, "Filter out if SAD window response does not exceed texture threshold", 10, 0, 10000)
gen.add("speckle_size",      int_t,    0, "Reject regions smaller than this size, pixels", 0, 0, 1000)
gen.add("speckle_range",     int_t,    0, "Max allowed difference between detected disparities", 0, 0, 40)
gen.add("disp12MaxDiff",     int_t,    0, "Maximum allowed difference (in integer pixel units) in the left-right disparity check", -1, -10, 10)
gen.add("fullDP",    		 bool_t,    0, "Set it to true to run the full-scale two-pass dynamic programming algorithm", True)


# First string value is node name, used only for generating documentation
# Second string value ("Disparity") is name of class and generated
#    .h file, with "Config" added, so class DisparityConfig
exit(gen.generate(PACKAGE, "dense_reconstruction", "DisparitySGBM"))
